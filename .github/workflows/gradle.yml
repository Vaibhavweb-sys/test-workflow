name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: # Manually trigger the workflow

permissions:
    contents: read
    packages: write
    id-token: write

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build --quiet

    - name: Print Output Location
      run: echo "Gradle build output location:${{ github.workspace }}/build"

    - name: Find JAR file
      run: |
        JAR_NAME=$(basename $(find . -name "*.jar" -not -path "./build/*"))
        echo "::set-output name=jar_name::$JAR_NAME"
        
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ${{ github.workspace }}/build/libs/${{ steps.find_jar.outputs.jar_name }}

    # - name: Setup gcloud CLI
    #   uses: google-github-actions/setup-gcloud@v0.2.1
    #   with:
    #       service_account_key: ${{ secrets.GCP_SA_KEY }}
    #       project_id: valid-chess-422514-m3
      
    - name: Authenticate with OIDC
      id: auth
      uses: google-github-actions/auth@v2
      with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_lifetime: 600s

    # - name: Use token
    #   run: echo "ID token is ${{ steps.auth.outputs.id_token }}"
    - name: Authenticate with service account
      run: |
        echo '${{ secrets.GCP_SERVICE_ACCOUNT }}' > sa_key.json
        gcloud auth activate-service-account --key-file=sa_key.json

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      run: |
        gcloud --quiet auth configure-docker europe-west2-docker.pkg.dev

    - name: Build and push Docker image
      run: |
       docker build -t europe-west2-docker.pkg.dev/valid-chess-422514-m3/test-docker-artifact/gartest:latest .
       docker push europe-west2-docker.pkg.dev/valid-chess-422514-m3/test-docker-artifact/gartest:latest
    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1 
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
          context: .
          push: true
          tags: ghcr.io/vaibhavweb-sys/test-workflow/testimage:latest
