name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      Image_registry:
        description: 'GAR image registry path'
        required: false

env:
  # Uncomment the following line and replace 'path-to-gar' with the path of your GAR image registry
  # to push to both GAR and GitHub Artifact Registry.
  # Leave it commented out to push to only GitHub Artifact Registry.
  # IMAGE_REGISTRY: path-to-gar
permissions:
    contents: read
    packages: write
    id-token: write

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '1.8'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Build with Gradle Wrapper
      run: ./gradlew build --quiet

    - name: Print Output Location
      run: echo "Gradle build output location:${{ github.workspace }}/build"

    - name: Find JAR file
      run: |
        JAR_NAME=$(basename $(find . -name "*.jar" -not -path "./build/*"))
        echo "::set-output name=jar_name::$JAR_NAME"
        
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-artifact
        path: ${{ github.workspace }}/build/libs/${{ steps.find_jar.outputs.jar_name }}

    - name: Authenticate with OIDC
      if: env.IMAGE_REGISTRY != ''
      id: auth
      uses: google-github-actions/auth@v2
      with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_lifetime: 600s

    - name: Configure Docker to use the gcloud command-line tool as a credential helper
      if: env.IMAGE_REGISTRY != ''
      run: |
        gcloud --quiet auth configure-docker europe-west2-docker.pkg.dev

    - name: Build and push Docker image to GAR
      if: env.IMAGE_REGISTRY != ''
      run: |
       docker build -t ${{ env.IMAGE_REGISTRY }}/test-docker-artifact/gartest:latest .
       docker push ${{ env.IMAGE_REGISTRY }}/test-docker-artifact/gartest:latest

    - name: Log in to GitHub Docker Registry
      if: env.IMAGE_REGISTRY == ''
      uses: docker/login-action@v1 
      with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REPO_TOKEN }}

    - name: Build and push Docker image to GitHub
      if: env.IMAGE_REGISTRY == ''
      uses: docker/build-push-action@v2
      with:
          context: .
          push: true
          tags: ghcr.io/vaibhavweb-sys/test-workflow/testimage:latest